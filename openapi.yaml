openapi: 3.0.0
info:
  title: Quiz Management API
  description: API for managing quizzes, questions, and submissions
  version: 1.0.0
servers:
  - url: http://localhost:3000
    description: Local development server

components:
  securitySchemes:
    BearerAuth:
      type: apiKey
      name: x-auth
      in: header
  schemas:
    Quiz:
      type: object
      properties:
        id:
          type: string
        title:
          type: string
        description:
          type: string
        createdBy:
          type: string
        questions:
          type: array
          items:
            $ref: "#/components/schemas/Question"

    Question:
      type: object
      properties:
        id:
          type: string
        text:
          type: string
        options:
          type: array
          items:
            type: string
        correctAnswer:
          type: integer
        type:
          type: string

    QuizSubmission:
      type: object
      properties:
        quizId:
          type: string
        studentId:
          type: string
        answers:
          type: array
          items:
            type: object
            properties:
              questionId:
                type: string
              selectedAnswer:
                type: integer
        submittedAt:
          type: string
          format: date-time
        status:
          type: string
          enum: [pending, approved, rejected]
        feedback:
          type: string
        reviewedBy:
          type: string
        reviewedAt:
          type: string
          format: date-time

    Error:
      type: object
      properties:
        error:
          type: string

paths:
  /api/quiz:
    get:
      summary: List all quizzes
      security:
        - BearerAuth: []
      responses:
        "200":
          description: List of quizzes
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Quiz"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

    post:
      summary: Create a new quiz
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                description:
                  type: string
      responses:
        "201":
          description: Quiz created successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Quiz"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/quiz/{quizId}:
    get:
      summary: Get a specific quiz
      security:
        - BearerAuth: []
      parameters:
        - name: quizId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Quiz details
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Quiz"
        "404":
          description: Quiz not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

    delete:
      summary: Delete a quiz
      security:
        - BearerAuth: []
      parameters:
        - name: quizId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Quiz deleted successfully
        "404":
          description: Quiz not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/quiz/{quizId}/questions:
    get:
      summary: Get all questions for a quiz
      security:
        - BearerAuth: []
      parameters:
        - name: quizId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: List of questions
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Question"

    post:
      summary: Add a question to a quiz
      security:
        - BearerAuth: []
      parameters:
        - name: quizId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                text:
                  type: string
                options:
                  type: array
                  items:
                    type: string
                correctAnswer:
                  type: integer
                type:
                  type: string
      responses:
        "201":
          description: Question created successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Question"

  /api/quiz/{quizId}/questions/{questionId}:
    get:
      summary: Get a specific question
      security:
        - BearerAuth: []
      parameters:
        - name: quizId
          in: path
          required: true
          schema:
            type: string
        - name: questionId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Question details
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Question"

    put:
      summary: Update a question
      security:
        - BearerAuth: []
      parameters:
        - name: quizId
          in: path
          required: true
          schema:
            type: string
        - name: questionId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                text:
                  type: string
                options:
                  type: array
                  items:
                    type: string
                correctAnswer:
                  type: integer
                type:
                  type: string
      responses:
        "200":
          description: Question updated successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Question"

    delete:
      summary: Delete a question
      security:
        - BearerAuth: []
      parameters:
        - name: quizId
          in: path
          required: true
          schema:
            type: string
        - name: questionId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Question deleted successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteQuestionResponse"

  /api/quiz/{quizId}/submit:
    post:
      summary: Submit quiz answers
      security:
        - BearerAuth: []
      parameters:
        - name: quizId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                answers:
                  type: array
                  items:
                    type: integer
      responses:
        "201":
          description: Quiz submitted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string

  /api/quiz/{quizId}/submissions:
    get:
      summary: Get all submissions for a quiz
      security:
        - BearerAuth: []
      parameters:
        - name: quizId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: List of submissions
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/QuizSubmission"
        "403":
          description: Not authorized to view submissions
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/quiz/{quizId}/submissions/{submissionId}/review:
    put:
      summary: Review a quiz submission
      security:
        - BearerAuth: []
      parameters:
        - name: quizId
          in: path
          required: true
          schema:
            type: string
        - name: submissionId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  enum: [approved, rejected]
                feedback:
                  type: string
      responses:
        "200":
          description: Submission reviewed successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  submission:
                    $ref: "#/components/schemas/QuizSubmission"
        "403":
          description: Not authorized to review submissions
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
